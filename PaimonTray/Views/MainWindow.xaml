<Window
    mc:Ignorable="d"
    x:Class="PaimonTray.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:PaimonTray.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:notifyIcon="using:H.NotifyIcon"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Closed="MainWindow_OnClosed">
    <!-- The root grid. -->
    <Grid
        x:Name="GridRoot"
        ActualThemeChanged="GridRoot_OnActualThemeChanged"
        Loaded="GridRoot_OnLoaded">
        <Grid.BackgroundTransition>
            <BrushTransition />
        </Grid.BackgroundTransition>
        <Grid.Resources>
            <!-- ReSharper disable Xaml.RedundantResource -->
            <SolidColorBrush
                x:Key="RootGridAcrylicBackground"
                Color="{ThemeResource SystemAltMediumColor}" />
            <SolidColorBrush
                x:Key="RootGridFallbackBackground"
                Color="{ThemeResource SolidBackgroundFillColorBase}" />
            <!-- ReSharper restore Xaml.RedundantResource -->
        </Grid.Resources>
        <!-- The app's task bar icon. -->
        <notifyIcon:TaskbarIcon
            x:Name="TaskbarIconApp"
            LeftClickCommand="{x:Bind _app.CommandsVm.ToggleMainWindowVisibilityCommand}"
            IconSource="{x:Bind helpers:AppFieldsHelper.UriAppIcon}"
            MenuActivation="RightClick"
            NoLeftClickDelay="True"
            Visibility="Collapsed">
            <notifyIcon:TaskbarIcon.ContextFlyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False">
                    <MenuFlyoutItem Command="{x:Bind _app.CommandsVm.AddUpdateAccountCommand}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Command="{x:Bind _app.CommandsVm.ShowSettingsWindowCommand}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem
                        x:FieldModifier="public"
                        x:Name="MenuFlyoutItemAppMenuMainWindowVisibility"
                        Command="{x:Bind _app.CommandsVm.ToggleMainWindowVisibilityCommand}" />
                    <MenuFlyoutItem
                        Command="{x:Bind _app.CommandsVm.ExitAppCommand}"
                        CommandParameter="{x:Bind TaskbarIconApp}" />
                </MenuFlyout>
            </notifyIcon:TaskbarIcon.ContextFlyout>
        </notifyIcon:TaskbarIcon>
        <!-- The body navigation view. -->
        <NavigationView
            x:FieldModifier="public"
            x:Name="NavigationViewBody"
            IsBackButtonVisible="Collapsed"
            IsBackEnabled="False"
            IsPaneToggleButtonVisible="False"
            IsSettingsVisible="False"
            IsTabStop="False"
            PaneDisplayMode="{x:Bind MainWinViewModel.NavViewPaneDisplayMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionChanged="NavigationViewBody_OnSelectionChanged">
            <NavigationView.MenuItems>
                <NavigationViewItem
                    x:FieldModifier="public"
                    x:Name="NavigationViewItemBodyRealTimeNotes"
                    IsSelected="True">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphHome}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem
                    x:FieldModifier="public"
                    x:Name="NavigationViewItemBodyAccountAddUpdate">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphAddFriend}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.MenuItems>
            <NavigationView.PaneFooter>
                <!-- The main menu button. -->
                <Button
                    x:Name="ButtonMainMenu"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Margin="4, 0, 0, 0"
                    Padding="0, 7"
                    Width="40">
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Command="{x:Bind _app.CommandsVm.AddUpdateAccountCommand}" />
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem Command="{x:Bind _app.CommandsVm.ShowSettingsWindowCommand}" />
                            <MenuFlyoutSubItem x:Name="MenuFlyoutSubItemMainMenuHelp">
                                <MenuFlyoutSubItem.Icon>
                                    <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphHelp}" />
                                </MenuFlyoutSubItem.Icon>
                                <MenuFlyoutSubItem.Items>
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpAppSite"
                                        IsEnabled="False">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphWebsite}" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpUserManual"
                                        IsEnabled="False">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphDictionary}" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpGitHubRepo"
                                        Command="{x:Bind _app.CommandsVm.OpenLinkInDefaultCommand}"
                                        CommandParameter="{x:Bind helpers:AppFieldsHelper.UrlGitHubRepo}" />
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpIssues"
                                        Command="{x:Bind _app.CommandsVm.OpenLinkInDefaultCommand}"
                                        CommandParameter="{x:Bind helpers:AppFieldsHelper.UrlGitHubRepoIssues}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphTrackers}" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpReleaseNotes"
                                        Command="{x:Bind _app.CommandsVm.OpenLinkInDefaultCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphKnowledgeArticle}" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpGiteeRepo"
                                        Command="{x:Bind _app.CommandsVm.OpenLinkInDefaultCommand}"
                                        CommandParameter="{x:Bind helpers:AppFieldsHelper.UrlGiteeRepo}" />
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem
                                        x:Name="MenuFlyoutItemMainMenuHelpLogsShow"
                                        Command="{x:Bind _app.CommandsVm.OpenLinkInDefaultCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphDiagnostic}" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyoutSubItem.Items>
                            </MenuFlyoutSubItem>
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem
                                x:Name="MenuFlyoutItemMainMenuMainWindowHide"
                                Command="{x:Bind _app.CommandsVm.ToggleMainWindowVisibilityCommand}" />
                            <MenuFlyoutItem
                                Command="{x:Bind _app.CommandsVm.ExitAppCommand}"
                                CommandParameter="{x:Bind TaskbarIconApp}" />
                        </MenuFlyout>
                    </Button.Flyout>
                    <FontIcon Glyph="{x:Bind helpers:AppFieldsHelper.GlyphMore}" />
                </Button>
            </NavigationView.PaneFooter>
            <!-- The body frame. -->
            <Frame
                x:FieldModifier="public"
                x:Name="FrameBody"
                HorizontalAlignment="Left"
                IsNavigationStackEnabled="False"
                SizeChanged="FrameBody_OnSizeChanged"
                VerticalAlignment="Top" />
        </NavigationView>
    </Grid>
</Window>